apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      terminationGracePeriodSeconds: 300
      imagePullSecrets:
        - name: dockerconfigjson-github-com
      containers:
        - name: webapp-docker-image
          image: greentropikal/django-webapp:django-prod-19
    #       command: ["/bin/sh", "-c", "python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"]
    # #["python","./manage.py", "runserver", "0.0.0.0:8000"]
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "100M"
            limits:
              cpu: "500m"
              memory: "1000M"
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 120
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: djangosecrets
                  key: user

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: djangosecrets
                  key: password

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: app-variables
                  key: POSTGRES_DB

            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-variables
                  key: DB_HOST


---
apiVersion: v1
kind: Service
metadata:
  name: django-cluster-ip-service
spec:
  type: NodePort
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 31000






































# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: django-app
#   labels:
#     app: django-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       pod: django-app
#   template:
#     metadata:
#       labels:
#         pod: django-app
#     spec:
#       containers:
#       - image: greentropikal/devops_challenge_app:latest
#         name: django-app
#         env:
#           - name: POSTGRES_USER
#             valueFrom:
#               secretKeyRef:
#                 name: djangosecrets
#                 key: user

#           - name: POSTGRES_PASSWORD
#             valueFrom:
#               secretKeyRef:
#                 name: djangosecrets
#                 key: password

#           - name: POSTGRES_HOST
#             value: postgres-service

#           - name: REDIS_HOST
#             value: redis-service     
#         ports:
#         - containerPort: 8000
#           name: gunicorn
#         resources:
#           limits:
#             cpu: 100m
#             memory: 100Mi

# ---

# kind: Service
# apiVersion: v1
# metadata:
#   name: django-app-service
# spec:
#   selector:
#     pod: django-app
#   ports:
#   - protocol: TCP
#     port: 8000
#     targetPort: 8000
#     name: gunicorn
#   type: LoadBalancer