version: '3.8'

services:
  app:
    build: 
      context: ./app
    expose:
      - "8000"

    volumes:
      - ./app:/app
    command: gunicorn --bind 0.0.0.0:8000 django_celery.wsgi:application --workers=1
    # command: >
    #   sh -c "python3 manage.py migrate" && 
    #          python3 manage.py runserver 0.0.0.0:8000"

    env_file:
      - ./.env.dev
    depends_on:
      - db
    networks:
      - django-network

  db:
    image: postgres:10-alpine
    env_file:
      - ./.env.dev
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - django-network

  redis:
    image: redis:alpine
    networks:
      - django-network

  celery:
    restart: always
    build:
      context: ./app
    command: celery -A django_celery worker -l info --logfile=logs/celery.log
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app
    networks:
      - django-network

  dashboard:
    image: mher/flower:latest
    command: celery flower  -A core --port=5555  --broker=redis://redis:6379/0 
    ports:
      - 5555:5555
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - app
      - db
      - redis
      - celery
    networks:
      - django-network

  nginx:
    build: 
      context: ./nginx
      dockerfile: nginx.dockerfile
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - django-network
    links:
      - app

networks:
  django-network:
    name: django-network

volumes:
  postgres_data:
  media_volume:
  static_volume: